header(class="flex flex-wrap sm:justify-start sm:flex-nowrap z-50 w-full bg-white text-sm py-4 dark:bg-gray-800")
  nav(class="max-w-[85rem] w-full mx-auto px-4 sm:flex sm:items-center sm:justify-between" aria-label="Global")
    .flex.items-center.justify-between
      a(class="flex-none text-xl font-semibold dark:text-white" href="#") Brand
      div(class="sm:hidden")
        button(type="button" class="hs-collapse-toggle p-2 inline-flex justify-center items-center gap-x-2 rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-transparent dark:border-gray-700 dark:text-white dark:hover:bg-white/10 dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600" data-hs-collapse="#navbar-with-collapse" aria-controls="navbar-with-collapse" aria-label="Toggle navigation")
          svg(class="hs-collapse-open:hidden flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
            line(x1="3" x2="21" y1="6" y2="6")
            line(x1="3" x2="21" y1="12" y2="12")
            line(x1="3" x2="21" y1="18" y2="18")
          svg(class="hs-collapse-open:block hidden flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
            path(d="M18 6 6 18")
            path(d="m6 6 12 12")
    #navbar-with-collapse(class="hidden basis-full grow sm:block")
      div(class="flex flex-col gap-5 mt-5 sm:flex-row sm:items-center sm:justify-end sm:mt-0 sm:ps-5")
        a(class="font-medium text-blue-500 dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600" href="#" aria-current="page") Discord

        button(type="button" class="hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500" data-hs-theme-click-value="dark")
          svg(class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
            path(d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z")

        button(type="button" class="hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500" data-hs-theme-click-value="light")
          svg(class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
            circle(cx="12" cy="12" r="4")
            path(d="M12 8a2 2 0 1 0 4 4")
            path(d="M12 2v2")
            path(d="M12 20v2")
            path(d="m4.93 4.93 1.41 1.41")
            path(d="m17.66 17.66 1.41 1.41")
            path(d="M2 12h2")
            path(d="M20 12h2")
            path(d="m6.34 17.66-1.41 1.41")
            path(d="m19.07 4.93-1.41 1.41")

script.
  const HSThemeAppearance = {
    init() {
        const defaultTheme = 'default'
        let theme = localStorage.getItem('hs_theme') || defaultTheme

        if (document.querySelector('html').classList.contains('dark')) return
        this.setAppearance(theme)
    },
    _resetStylesOnLoad() {
        const $resetStyles = document.createElement('style')
        $resetStyles.innerText = `*{transition: unset !important;}`
        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')
        document.head.appendChild($resetStyles)
        return $resetStyles
    },
    setAppearance(theme, saveInStore = true, dispatchEvent = true) {
        const $resetStylesEl = this._resetStylesOnLoad()

        if (saveInStore) {
            localStorage.setItem('hs_theme', theme)
        }

        if (theme === 'auto') {
            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
        }

        document.querySelector('html').classList.remove('dark')
        document.querySelector('html').classList.remove('default')
        document.querySelector('html').classList.remove('auto')

        document.querySelector('html').classList.add(this.getOriginalAppearance())

        setTimeout(() => {
            $resetStylesEl.remove()
        })

        if (dispatchEvent) {
            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))
        }
    },
    getAppearance() {
        let theme = this.getOriginalAppearance()
        if (theme === 'auto') {
            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
        }
        return theme
    },
    getOriginalAppearance() {
        const defaultTheme = 'default'
        return localStorage.getItem('hs_theme') || defaultTheme
    }
  }
  HSThemeAppearance.init()

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
      if (HSThemeAppearance.getOriginalAppearance() === 'auto') {
          HSThemeAppearance.setAppearance('auto', false)
      }
  })

  window.addEventListener('load', () => {
      const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')
      const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')

      $clickableThemes.forEach($item => {
          $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))
      })

      $switchableThemes.forEach($item => {
          $item.addEventListener('change', (e) => {
              HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')
          })

          $item.checked = HSThemeAppearance.getAppearance() === 'dark'
      })

      window.addEventListener('on-hs-appearance-change', e => {
          $switchableThemes.forEach($item => {
              $item.checked = e.detail === 'dark'
          })
      })
  })